{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.1",
    "parameters": {
        "deploymentPrefix": {
            "type": "string",
            "defaultValue": "security",
            "minLength": 4,
            "maxLength": 15,
            "metadata": {
                "description": "A unique string for the deployment with maximum 15 characters which would be used to provision the resources"
            }
        },
        "solutionType": {
            "type": "string",
            "defaultValue": "SecurityAndSurveillance",
            "metadata": {
                "description": "Provide the name of the solution"
            }
        },
        "cognitiveServicesLocation": {
            "type": "string",
            "defaultValue": "",
            "allowedValues": [
                "eastus",
                "eastus2",
                "westus",
                "westus2",
                "southcentralus",
                "westcentralus",
                "northeurope",
                "westeurope"
            ],
            "metadata": {
                "description": "choose the location for cognitiveServicesLocation which is diffrent from the primary deployment cognitiveServiceLocation"
            }
        },
        "locationDR": {
            "type": "string",
            "defaultValue": "",
            "allowedValues": [
                "EastUS2",
                "CentralUS",
                "WestUS2",
                "WestCentralUS",
                "CanadaCentral",
                "CanadaEast",
                "AustraliaEast",
                "AustraliaSouthEast",
                "CentralIndia",
                "SouthIndia",
                "EastAsia",
                "SouthEastAsia",
                "JapanWest",
                "JapanEast",
                "KoreaCentral",
                "KoreaSouth",
                "UKSouth",
                "UKWest"
            ],
            "metadata": {
                "description": "choose the geo-paired location of the primary deployment"
            }
        },
        "trafficManagerName": {
            "type": "string",
            "defaultValue": "NA",
            "metadata": {
                "description": "please provide the name of the trafficmanager name which is deployed for the firstdeployment"
            }
        },
        "b2cApplicationIdDR": {
            "type": "string",
            "metadata": {
                "description": "Enter App Client ID registrered under B2C tenant"
            }
        },
        "b2cPolicy": {
            "type": "string",
            "metadata": {
                "description": "Enter B2C SignUp-SignIn policy"
            }
        },
        "b2cTenant": {
            "type": "string",
            "metadata": {
                "description": "Enter B2C tenant name ex. something.onmicrosoft.com"
            }
        },
        "b2cScopeDR": {
            "type": "string",
            "metadata": {
                "description": "Enter User impersonation scope of B2C tenant"
            }
        },
        "videoIndexerKey": {
            "type": "string",
            "metadata": {
                "description": "Enter Video Indexer service key"
            }
        },
        "keyVaultName": {
            "type": "string",            
            "metadata": {
                "description": "provide the name of the keyvalut"
            }
        },
        "keyVaultwebAppSecretName": {
            "type": "string",           
            "metadata": {
                "description": "provide the name of the webapp secret name "
            }
        },
        "keyVaultResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "provide the name of the keyvalut resource group"
            }
        },
        "webAppCertificatethumbPrint": {
            "type": "string",
            "metadata": {
                "description": "provide the thumbprint of the web app certificate."
            }
        }
    },
    "variables": {
        "storageAccount": {
            "strAccntName": "[concat(toLower(parameters('deploymentPrefix')),'strgaccnt',variables('suffix'))]",
            "strAccntType": "Standard_LRS"
        },
        "documentDB": {
            "DocDBAccountName": "[concat(toLower(parameters('deploymentPrefix')),'docdb',variables('suffix'))]",
            "offerType": "Standard",
            "DocDBOfferThroughput": "400"
        },
        "iothub": {
            "iotHubName": "[variables('iotHubName')]",
            "iotHubKeyName": "iothubowner",
            "iotHubHostName": "[concat(variables('iotHubName'),'.azure-devices.net')]"
        },
        "eventhub": {
            "eventHubName": "[variables('eventHubName')]",
            "locationDR": "[parameters('locationDR')]",
            "sku": "Standard",
            "aliasName": "[variables('aliasName')]",
            "eventHubSecondaryKey": "[concat(uniqueString(variables('eventhubNamespaceName'), resourceGroup().Id, 'secondaryKey'),'F9NRSV78nYomDlFjsz21X9aVKPL4Eo=')]",
            "eventhubNamespaceName": "[variables('eventhubNamespaceName')]"
        },
        "faceApi": {
            "locationDR": "[parameters('cognitiveServicesLocation')]",
            "freeFaceApiNameDR": "[concat(parameters('deploymentPrefix'),'-basic-faceapiDR')]",
            "freeFaceApiPricingTier": "S0",
            "standardFaceApiNameDR": "[concat(parameters('deploymentPrefix'),'-standard-faceapiDR')]",
            "standardFaceApiPricingTier": "S0"
        },
        "visionApi": {
            "locationDR": "[parameters('cognitiveServicesLocation')]",
            "freeVisionApiNameDR": "[concat(parameters('deploymentPrefix'),'-basic-visionapiDR')]",
            "freeVisionApiPricingTier": "S1",
            "standardVisionApiNameDR": "[concat(parameters('deploymentPrefix'),'-standard-visionapiDR')]",
            "standardVisionApiPricingTier": "S1"
        },
        "webApp": {
            "locationDR": "[parameters('locationDR')]",
            "appServicePlanPricingTier": "S1",
            "appServicePlanInstanceCount": 1,
            "hostingPlanNameDR": "[concat(parameters('deploymentPrefix'),'AppServPlanDR',variables('suffix'))]",
            "webSiteNameDR": "[variables('webSiteNameDR')]",
            "computeEngineNameDR": "[variables('computeEngineNameDR')]",
            "serverBackendNameDR": "[variables('serverBackendNameDR')]",
            "WebAppPackageURI": "[concat(variables('WebAppDeployPackageURI'), variables('SasToken'))]",
            "ComputeEnginePackageURI": "[concat(variables('ComputeEngineDeployPackageURI'), variables('SasToken'))]",
            "ServerBackendPackageURI": "[concat(variables('ServerBackendDeployPackageURI'), variables('SasToken'))]",
            "BlobconnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('DeployStorageAccountName'),';AccountKey=',variables('DeployStorageAccountKey'))]",
            "serverBackendFullAddressDR": "[concat('https://',variables('serverBackendNameDR'),'.azurewebsites.net')]",
            "computeEngineFullAddressDR": "[concat('https://',variables('computeEngineNameDR'),'.azurewebsites.net')]",
            "ADEndpoint": "https://login.windows.net/",
            "WindowsManagementUri": "https://management.core.windows.net/",
            "autoscaleNameDR": "[concat('autoscaleDR',variables('suffix'))]"
        },
        "omsSettings": {
            "omsWorkspaceName": "[concat('slns', variables('suffix'))]",
            "omsLogAnalyticsSku": "Standalone",
            "omsEnableApiVersion": "2015-07-01"
        },
        "appInsights": {
            "appInsightResourceName": "[concat('AppInsights', variables('suffix'))]"
        },
        "trafficManagerSettings": {
            "trafficManagerApiVersion": "2017-05-01",
            "trafficManagerName": "[parameters('TrafficManagerName')]"
        },
        "certificateBinding": {
            "existingApplocationDR": "[parameters('locationDR')]",
            "hostingPlanNameDR": "[variables('hostingPlanNameDR')]",
            "certificateNameDR": "[concat('webAppCertificateDR',variables('suffix'))]",
            "webSiteNameDR": "[variables('webSiteNameDR')]",
            "customHostname": "[concat(parameters('TrafficManagerName'),'.trafficmanager.net')]",
            "keyVaultName": "[parameters('keyVaultName')]",
            "keyVaultResourceid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('keyVaultResourceGroup'), '/providers/Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]",
            "keyVaultSecretName": "[parameters('keyVaultwebAppSecretName')]",
            "apiVersion": "2016-03-01",
            "thumbPrint": "[parameters('webAppCertificatethumbPrint')]"
        },
        "suffix": "[substring(uniqueString(resourceGroup().id), 0, 5)]",
        "hostingPlanNameDR": "[concat(parameters('deploymentPrefix'),'AppServPlanDR',variables('suffix'))]",
        "aliasName": "[concat(parameters('deploymentPrefix'),'eventhub-ha-alias',variables('suffix'))]",
        "iotHubName": "[concat(parameters('deploymentPrefix'),'iothub',variables('suffix'))]",
        "eventHubName": "[concat(parameters('deploymentPrefix'),'eventhub',variables('suffix'))]",
        "eventhubNamespaceName": "[concat(parameters('deploymentPrefix'),'eventhubnmsp',variables('suffix'))]",
        "webSiteNameDR": "[concat(parameters('deploymentPrefix'),'webappDR',variables('suffix'))]",
        "computeEngineNameDR": "[concat(parameters('deploymentPrefix'),'cmptengineDR',variables('suffix'))]",
        "serverBackendNameDR": "[concat(parameters('deploymentPrefix'),'restappDR',variables('suffix'))]",
        "DeployStorageAccountName": "snsarm",
        "DeployStorageAccountKey": "",
        "WebAppDeployPackageURI": "https://github.com/sysgain/SecurityAndSurveillance/raw/master/code/build/distlatest.zip",
        "ComputeEngineDeployPackageURI": "https://github.com/sysgain/SecurityAndSurveillance/raw/master/code/build/CloudComputeEngineAppins.zip",
        "ServerBackendDeployPackageURI": "https://github.com/sysgain/SecurityAndSurveillance/raw/master/code/build/snsPackageAppins.zip",
        "SasToken": "?",
        "storageurl": "",
        "BasicUrl": "https://raw.githubusercontent.com/sysgain/SecurityAndSurveillance/master/"
    },
    "resources": [
        {
            "name": "FaceApi",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-02-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BasicUrl'),'nested/faceApi-DR.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "faceApi": {
                        "value": "[variables('faceApi')]"
                    },
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    },
                    "solutionType": {
                        "value": "[parameters('solutionType')]"
                    }
                }
            }
        },
        {
            "name": "VisionApi",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-02-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BasicUrl'),'nested/visionApi-DR.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "visionApi": {
                        "value": "[variables('visionApi')]"
                    },
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    },
                    "solutionType": {
                        "value": "[parameters('solutionType')]"
                    }
                }
            }
        },
        {
            "name": "RecoveryWebApp",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "FaceApi",
                "VisionApi"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BasicUrl'),'nested/webapp-dr.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "webApp": {
                        "value": "[variables('webApp')]"
                    },
                    "iothub": {
                        "value": "[variables('iothub')]"
                    },
                    "eventhub": {
                        "value": "[variables('eventhub')]"
                    },
                    "faceApi": {
                        "value": "[variables('faceApi')]"
                    },
                    "visionApi": {
                        "value": "[variables('visionApi')]"
                    },
                    "documentDB": {
                        "value": "[variables('documentDB')]"
                    },
                    "storageAccount": {
                        "value": "[variables('storageAccount')]"
                    },
                    "deploymentPrefix": {
                        "value": "[parameters('deploymentPrefix')]"
                    },
                    "videoIndexerKey": {
                        "value": "[parameters('videoIndexerKey')]"
                    },
                    "b2cTenant": {
                        "value": "[parameters('b2cTenant')]"
                    },
                    "b2cApplicationIdDR": {
                        "value": "[parameters('b2cApplicationIdDR')]"
                    },
                    "b2cPolicy": {
                        "value": "[parameters('b2cPolicy')]"
                    },
                    "b2cScopeDR": {
                        "value": "[parameters('b2cScopeDR')]"
                    },
                    "appInsights": {
                        "value": "[variables('appInsights')]"
                    },
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    },
                    "solutionType": {
                        "value": "[parameters('solutionType')]"
                    }
                }
            }
        },
        {
            "name": "TrafficWebappDr",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "RecoveryWebApp"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BasicUrl'),'nested/trafficmanager-redeploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "webApp": {
                        "value": "[variables('webApp')]"
                    },
                    "trafficManagerSettings": {
                        "value": "[variables('trafficManagerSettings')]"
                    },
                    "solutionType": {
                        "value": "[parameters('solutionType')]"
                    }
                }
            }
        },
        {
            "name": "certificateBinding",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "RecoveryWebApp",
                "TrafficwebAppDr"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BasicUrl'),'nested/certificatebinding-redeploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "certificateBinding": {
                        "value": "[variables('certificateBinding')]"
                    },
                    "solutionType": {
                        "value": "[parameters('solutionType')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "WebSiteUri": {
            "type": "string",
            "value": "[concat('https://', variables('webSiteNameDR'),'.azurewebsites.net/')]"
        },
        "ServerBackendUri": {
            "type": "string",
            "value": "[concat('https://', variables('serverBackendNameDR'),'.azurewebsites.net/')]"
        }
    }
}
